# RZFeeser@alta3.com
# GitHub Flow - Working (Fixed)

# .github/workflows/java-demo.yml (FIXED)
# Each line is commented to explain what it does.

name: Java CI (Fixed)                           # A friendly, updated name for the workflow

on:                                             # Begin the trigger configuration block
  push:                                         # Run this workflow on any push
    branches:                                   # Limit to specific branches
      - main                                    # Only push events on 'main' will trigger

jobs:                                           # Define all jobs in this workflow
  build:                                        # 'build' is the job identifier
    runs-on: ubuntu-latest                      # ✅ Correct key: 'runs-on' specifies the VM image used by the runner

    steps:                                      # ✅ Correct key: 'steps' is a list; each step starts with '-'
      - name: Checkout repository               # Step: fetch the repository contents into the runner
        uses: actions/checkout@v4               # 'uses' references an existing action by owner/repo@version

      - name: Set up Java                       # Step: install and configure a JDK in the runner
        uses: actions/setup-java@v4             # Use the official Java setup action
        with:                                   # Provide inputs to the action
          distribution: temurin                 # Choose the JDK distribution (Temurin is a popular OpenJDK build)
          java-version: "21"                    # ✅ Correct input: 'java-version' (singular). Installs JDK 21.

      - name: Show Java version                 # Optional step: confirm which Java is installed
        run: java -version                      # Prints the Java version for verification in the logs

      - name: Create working directory          # Prepare a folder to hold pulled source
        run: mkdir -p src                       # '-p' creates the directory if it doesn't exist

      - name: Pull Hello.java into runner       # Demonstrate "pulling" source via curl from *this* repo's raw URL
        run: |                                  # Multi-line script
          # The ${{ github.repository }} context is 'owner/repo' for the current workflow run
          # We use GitHub's raw content endpoint to fetch the committed Hello.java file
          curl -L -o src/Hello.java \
            https://raw.githubusercontent.com/${{ github.repository }}/main/Hello.java
          echo "Pulled source:"                 # Print a label for the next list output
          ls -l src                             # Confirm Hello.java exists in 'src/'

      - name: Compile Java                      # Compile Hello.java to produce Hello.class
        run: |                                  # Multi-line script
          javac src/Hello.java                  # 'javac' compiles the Java source file
          echo "Compiled files:"                # Print a label for the next list output
          ls -l src                             # Confirm Hello.class was created next to Hello.java

      - name: Run Java                          # Execute the compiled class file
        run: |                                  # Multi-line script
          cd src                                # Change directory to where Hello.class resides
          java Hello                            # Run the Hello program (class name only, no .class extension)
